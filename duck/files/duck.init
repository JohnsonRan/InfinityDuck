#!/bin/sh /etc/rc.common
# Copyright (C) 2023 Tianling Shen <cnsztl@immortalwrt.org>

USE_PROCD=1
START=99

extra_command "hot_reload" "Hot-reload service"

CONF="duck"
PROG="/usr/bin/dae"
LOG_DIR="/var/log/duck"

start_service() {
	config_load "$CONF"

	local enabled
	config_get_bool enabled "config" "enabled" "0"
	[ "$enabled" -eq "1" ] || return 1

	local delay
	config_get delay "config" "delay" "0"
	
	local config_file
	config_get config_file "config" "config_file" "/etc/duck/config.dae"
	
	local subscribe_url
	config_get subscribe_url "config" "subscribe_url" ""
	
	if [ -n "$subscribe_url" ]; then
		mkdir -p /etc/duck
		[ -f "$config_file" ] && cp -f "$config_file" "/etc/duck/config.dae.bak"
		
		logger -t duck "Downloading configuration from $subscribe_url"
		if ! curl -s -m 5 --retry 2 -f -o "$config_file.tmp" "$subscribe_url"; then
			logger -t duck "Failed to download configuration, using existing one"
			rm -f "$config_file.tmp"
		else
			if "$PROG" validate -c "$config_file.tmp"; then
				mv -f "$config_file.tmp" "$config_file"
				logger -t duck "Successfully updated configuration"
			else
				logger -t duck "Downloaded configuration is invalid, using existing one"
				rm -f "$config_file.tmp"
				mv -f "/etc/duck/config.dae.bak" "$config_file"
			fi
		fi
	fi

	"$PROG" validate -c "$config_file" || return 1

	local log_maxbackups log_maxsize
	config_get log_maxbackups "config" "log_maxbackups" "1"
	config_get log_maxsize "config" "log_maxsize" "1"

	if [ "$delay" -gt 0 ]; then
		logger -t duck "Delaying start for $delay seconds..."
		sleep "$delay"
	fi

	mkdir -p "$LOG_DIR"
	procd_open_instance "$CONF"
	procd_set_param command "$PROG" run
	procd_append_param command --config "$config_file"
	procd_append_param command --disable-timestamp
	procd_append_param command --logfile "$LOG_DIR/duck.log"
	procd_append_param command --logfile-maxbackups "$log_maxbackups"
	procd_append_param command --logfile-maxsize "$log_maxsize"

	procd_set_param limits core="unlimited"
	procd_set_param limits nofile="1000000 1000000"
	procd_set_param respawn
	# procd_set_param stdout 1
	procd_set_param stderr 1

	procd_close_instance
}

stop_service() {
	rm -rf "$LOG_DIR"
}

service_triggers() {
	procd_add_reload_trigger "$CONF"
}

hot_reload() {
	/etc/init.d/duck running && "$PROG" reload "$(cat /var/run/dae.pid)"
}